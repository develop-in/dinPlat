<?xml version="1.0" encoding= "UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="stock">

	<!-- 종목List -->
    <select id="stockList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select oa.*, concat(@rownum := @rownum + 1) as no
		from  (select
				   a.stockno as stockNo, 
			       b.stockname as stockName,
			       a.themeid as themeId,
			       c.themename as themeName,
			       a.industryid as industryId,
			       d.industryname as industryName,
			       <![CDATA[group_concat(concat(e.product,' (',e.productrate,') ') separator '<br>') as product,]]> 
			       a.stablepoint as stablePoint,
			       a.growthpoint as growthPoint,
			       a.profitpoint as profitPoint,
			       format(a.rightprice,0) as rightPrice,
			       (select count(distinct ia.newsno) 
			        from   sg_news ia, sg_news_category ib
	                where  ia.newsno = ib.newsno
	                and    ib.category = '5'
	                and    ib.categoryid = a.stockno) as newsCount,
			       ifnull(ja.portfolioyn,'N') as portfolioYn
			from   sg_stock_info a
			       left join sg_portfolio ja
	               on 	a.stockno = ja.stockno
	               and    ja.portfolioyn = 'Y'
	               left join sg_theme_code c
	               on a.themeid = c.themeid
				   left join sg_industry_code d
				   on a.industryid = d.industryid
				   left join sg_stock_product e
				   on a.stockno = e.stockno,
				   sg_stock_code b
			where  a.stockno = b.stockno
			group by a.stockno
			order by stockName, e.productrate
			LIMIT #{start}, #{end} ) oa, (select @rownum := #{start}) ob
	</select>
	
	<!-- 종목List Count -->
    <select id="stockListCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select count(*)
		from   sg_stock_info a,
			   sg_stock_code b
		where  a.stockno = b.stockno
	</select>
	
	
	<!-- 포트폴리오 등록여부 확인 -->
    <select id="getExsitPortfolio" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select count(*)
		from   sg_portfolio
		where  stockno = #{stockNo}
	</select>
	
	
	<!-- 포트폴리오 신규편입 -->
	<insert id="insert_sg_portfolio" parameterType="java.util.HashMap">
		insert into sg_portfolio (stockno, portfolioyn)
		values(#{stockNo}, #{portfolioYn})
	</insert>
	
	<!-- 포트폴리오  편입/해제 -->
	<update id="update_sg_portfolio" parameterType="java.util.HashMap">
		update sg_portfolio set portfolioyn = #{portfolioYn}
		where stockno = #{stockNo}
	</update>
	
	
	
	<!-- 종목정보 -->
    <select id="stockInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select substr(a.findtime,1,4) as findYear,
		       substr(a.findtime,5,2) as findMonth,
		       substr(a.findtime,7,2) as findDay,
		       a.stockno as stockNo, 
		       b.stockname as stockName,
		       a.markettype as marketType,
		       a.summary as summary,
		       a.industryid as industryId,
		       d.industryname as industryName,
		       a.kseid as kseId,
		       e.ksename as kseName,
		       a.ficsid as ficsId,
		       f.ficsname as ficsName,
		       a.themeid as themeId,
		       c.themename as themeName,
		       substr(a.founddate,1,4) as foundYear,
		       substr(a.founddate,5,2) as foundMonth,
		       substr(a.founddate,7,2) as foundDay,
		       <![CDATA[group_concat(distinct concat('▶ ', ob.history) separator '<br>') as history,]]> 
		       a.ceo as ceo,
		       a.ceoinfo as ceoInfo,
		       <![CDATA[group_concat(distinct concat('▶ ', oc.holder,' (',oc.holderrate,') ') separator '<br>') as holder,]]> 
		       format(a.totalissue,0) as totalIssue,
		       format(a.totalamount,0) as totalAmount,
		       format(a.shareamount,0) as shareAmount,
		       a.totalissue as totalIssueReg,
		       a.totalamount as totalAmountReg,
		       a.shareamount as shareAmountReg,
		       a.sharerate as shareRate,
		       a.foreignrate as foreignRate,
		       <![CDATA[group_concat(distinct concat(oa.product,' (',oa.productrate,') ') separator '<br>') as saleProduct,]]> 
		       a.stablepoint as stablePoint,
		       a.stablecomment as stableComment,
		       a.growthpoint as growthPoint,
		       a.growthcomment as growthComment,
		       a.profitpoint as profitPoint,
		       a.profitcomment as profitComment,
		       format(a.rightprice,0) as rightPrice,
		       a.rightprice as rightPriceReg
		from   sg_stock_info a
		       		left outer join sg_stock_product oa
		       		on a.stockno = oa.stockno
		       		left outer join sg_stock_history ob
		       		on a.stockno = ob.stockno
		       		left outer join sg_stock_holder oc
		       		on a.stockno = oc.stockno
		       		left outer join sg_theme_code c
		       		on a.themeid = c.themeid
		       		left outer join sg_industry_code d
		       		on a.industryid = d.industryid
		       		left outer join sg_kse_code e
		       		on a.kseid = e.kseid
		       		left outer join sg_fics_code f
		       		on a.ficsid = f.ficsid,
			   sg_stock_code b
		where  a.stockno = #{stockNo}
		and    a.stockno = b.stockno
	</select>


	<!-- 주요연혁 조회 -->
	<select id="stockHistory" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select history
		from   sg_stock_history
		where  stockno = ${stockNo}
	</select>
	

	<!-- 주주현황 조회 -->
	<select id="stockHolder" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select holder, holderRate
		from   sg_stock_holder
		where  stockno = ${stockNo}
	</select>
	
	
	<!-- 매출구성 조회 -->
	<select id="stockProduct" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select product, productRate
		from   sg_stock_product
		where  stockno = ${stockNo}
	</select>
	
		
	<!-- 최근 3년 재무제표 -->
    <select id="stockYearFinance" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    	select year as year,
    		   sale as sale,
    		   profitrate as profitRate,
    		   debt as debt,
    		   debtrate as debtRate,
    		   roe as roe,
    		   estimateyn as estimateYn
    	from   sg_stock_finance
    	where  quarter = '0'
    	and    stockno = #{stockNo}
    	order by year desc
    	limit 0, 3
    </select>
    
    <!-- 마지막년도 분기별 재무제표 -->
    <select id="stockQuarterFinance" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    	select year as year,
    	       quarter as quarter,
    		   concat(year, '.', quarter) as yearQuarter,
    		   sale as sale,
    		   profitrate as profitRate,
    		   debt as debt,
    		   debtrate as debtRate,
    		   roe as roe,
    		   estimateyn as estimateYn
    	from   sg_stock_finance
    	where  quarter in ('1', '2', '3', '4')
    	and    stockno = #{stockNo}
    	order by year desc, quarter desc
    	limit 0, 4
    </select>
    
    
    <!-- 등록된 종목이 있는 확인 -->
    <select id="existStock" parameterType="java.lang.String" resultType="java.lang.Integer">
    	select count(*) from sg_stock_info
    	where  stockno = #{stockNo}
    </select>
    
    <!-- 종목 기본 정보 등록 -->
    <insert id="insert_sg_stock_info" parameterType="java.util.HashMap">
    	insert into sg_stock_info (stockno, findtime, markettype, summary, industryid, kseid, ficsid, themeid, founddate, ceo, ceoinfo, totalissue, totalamount, shareamount, sharerate,
    									 foreignrate, growthcomment, growthpoint, profitcomment, profitpoint, stablecomment, stablepoint, rightprice, regdate)
    	values (#{stockNo}, concat(#{findYear}, #{findMonth}, #{findDay}), #{marketType}, #{summary}, #{industryId}, #{kseId}, #{ficsId}, #{themeId},
    			concat(#{foundYear}, #{foundMonth}, #{foundDay}), #{ceo}, #{ceoInfo}, #{totalIssue}, #{totalAmount}, #{shareAmount}, #{shareRate}, #{foreignRate}, 
    			#{growthComment}, #{growthPoint}, #{profitComment}, #{profitPoint}, #{stableComment}, #{stablePoint}, #{rightPrice}, date_format(NOW(), '%Y%m%d%H%i%s'))
    </insert>
    
    <!-- 종목 기본정보 수정 -->
    <update id="update_sg_stock_info" parameterType="java.util.HashMap">
    	update sg_stock_info set findtime = concat(#{findYear}, #{findMonth}, #{findDay}), 
    							 markettype = #{marketType}, 
    							 summary = #{summary}, 
    							 industryid = #{industryId}, 
    							 kseid = #{kseId}, 
    							 ficsid = #{ficsId}, 
    							 themeid = #{themeId}, 
    							 founddate = concat(#{foundYear}, #{foundMonth}, #{foundDay}), 
    							 ceo = #{ceo}, 
    							 ceoinfo = #{ceoInfo}, 
    							 totalissue = #{totalIssue}, 
    							 totalamount = #{totalAmount}, 
    							 shareamount = #{shareAmount}, 
    							 sharerate = #{shareRate},
    							 foreignrate = #{foreignRate}, 
    							 growthcomment = #{growthComment}, 
    							 growthpoint = #{growthPoint}, 
    							 profitcomment = #{profitComment}, 
    							 profitpoint = #{profitPoint}, 
    							 stablecomment = #{stableComment}, 
    							 stablepoint = #{stablePoint}, 
    							 rightprice = #{rightPrice}, 
    							 moddate = date_format(NOW(), '%Y%m%d%H%i%s')
    	where  stockno = #{stockNo}
    </update>
    
    <!-- 판매상품 삭제 -->
    <delete id="delete_sg_stock_product" parameterType="java.lang.String">
    	delete from sg_stock_product where stockno = #{stockNo}
    </delete>
    
    <!-- 판매상품 등록 -->
    <insert id="insert_sg_stock_product" parameterType="java.util.HashMap">
    	insert into sg_stock_product (stockno, product, productrate)
    	values
    	<foreach collection="product" item="item" separator=",">
		(#{item.stockNo}, #{item.product}, #{item.productRate})
		</foreach>
    </insert>
    
    <!-- 연혁 삭제 -->
    <delete id="delete_sg_stock_history" parameterType="java.lang.String">
    	delete from sg_stock_history where stockno = #{stockNo}
    </delete>
    
    <!-- 연혁 등록 -->
    <insert id="insert_sg_stock_history" parameterType="java.util.HashMap">
    	insert into sg_stock_history (stockno, history)
    	values
    	<foreach collection="history" item="item" separator=",">
		(#{item.stockNo}, #{item.history})
		</foreach>
    </insert>
    
    <!-- 주주구성 삭제 -->
    <delete id="delete_sg_stock_holder" parameterType="java.lang.String">
    	delete from sg_stock_holder where stockno = #{stockNo}
    </delete>
    
    <!-- 주주구성 등록 -->
    <insert id="insert_sg_stock_holder" parameterType="java.util.HashMap">
    	insert into sg_stock_holder (stockno, holder, holderrate)
    	values
    	<foreach collection="holder" item="item" separator=",">
		(#{item.stockNo}, #{item.holder}, #{item.holderRate})
		</foreach>
    </insert>
    
    
    <!-- 년 재무제표 삭제 -->
    <delete id="delete_sg_stock_finance_year" parameterType="java.lang.String">
    	delete from sg_stock_finance 
    	where stockno = #{stockNo}
    	and   quarter = '0'
    	and   year in
    	<foreach collection="yearFinance" item="item" open="(" separator="," close=")">
    	#{item.year}
    	</foreach>
    </delete>
    
    <!-- 년 재무제표 등록 -->
    <insert id="insert_sg_stock_finance_year" parameterType="java.util.HashMap">
    	insert into sg_stock_finance (stockno, year, quarter, sale, profitrate, debt, debtrate, roe, estimateyn)
    	values
    	<foreach collection="yearFinance" item="item" separator=",">
		(#{item.stockNo}, #{item.year}, '0', #{item.sale}, #{item.profitRate}, #{item.debt}, #{item.debtRate}, #{item.roe}, #{item.estimateYn})
		</foreach>
    </insert>
    
    
    <!-- 분기 재무제표 삭제 -->
    <delete id="delete_sg_stock_finance_quarter" parameterType="java.lang.String">
    	delete from sg_stock_finance 
    	where stockno = #{stockNo}
    	and   concat(year,quarter) in
    	<foreach collection="quarterFinance" item="item" open="(" separator="," close=")">
    	#{item.yearQuarter}
    	</foreach>
    </delete>
    
    <!-- 분기 재무제표 등록 -->
    <insert id="insert_sg_stock_finance_quarter" parameterType="java.util.HashMap">
    	insert into sg_stock_finance (stockno, year, quarter, sale, profitrate, debt, debtrate, roe, estimateyn)
    	values
    	<foreach collection="quarterFinance" item="item" separator=",">
		(#{item.stockNo}, #{item.year}, #{item.quarter}, #{item.sale}, #{item.profitRate}, #{item.debt}, #{item.debtRate}, #{item.roe}, #{item.estimateYn})
		</foreach>
    </insert>
    
    
    <!-- 뉴스List -->
   	<select id="newsList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select concat(@rownum := @rownum + 1) as no,
			   a.newsno as newsNo, 
			   case a.newstype 
			   		when '1' then '정부정책'
			   		when '2' then 'Global뉴스'
			   		when '3' then '국내뉴스'
			   		when '4' then '단순전망'
			   		when '5' then '공시'
			   		else '기타' 
			   		end as newsType, 
			   a.title as title, 
			   a.newstime as newsTime, 
			   case a.trackingtype 
			   		when '1' then 'Open'
			   		when '2' then 'Close'
			   		else 'None' 
			   		end as trackingType, 
			   case a.signaltype 
			   		when '1' then '관망'
			   		when '2' then '매수'
			   		when '3' then '호재종목매수'
			   		when '4' then '매도'
			   		when '5' then '악재종목매도'
			   		else '기타' 
			   		end as signalType
		from   sg_news a, sg_news_category b, (select @rownum := #{start}) c
		where  a.newsno = b.newsno
		and    a.effectrange = '5'
		and    b.category = '5'
		<if test="stockNo != null and stockNo != ''">
		and    b.categoryid = #{stockNo}
		</if>
		order by a.newsno desc
		limit #{start}, #{end}
   	</select>
   	
   	<!-- 뉴스Info --> 
   	<select id="newsInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
   		select a.newsno as newsNo, a.newstype as newsType, a.title as title, a.newstime as newsTime, a.contents as contents, a.comment as comment, 
   			   a.trackingtype as trackingType, a.signaltype as signalType, a.signalmessage as signalMessage, c.stockname as stockName, c.stockno as stockNo,
   			   substr(a.newstime,1,4) as newsYear,
		       substr(a.newstime,5,2) as newsMonth,
		       substr(a.newstime,7,2) as newsDay
   		from   sg_news a, sg_news_category b, sg_stock_code c
   		where  a.newsno = #{newsNo}
   		and    a.newsno = b.newsno
   		and    b.categoryid = c.stockno
   	</select>
    
    
    <!-- 뉴스List Count -->
   	<select id="newsListCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select count(*)
		from   sg_news a, sg_news_category b
		where  a.newsno = b.newsno
		and    a.effectrange = '5'
		and    b.category = '5'
		<if test="stockNo != null and stockNo != ''">
		and    b.categoryid = #{stockNo}
		</if>
   	</select>
   	
   	<!-- 뉴스등록 -->
   	<insert id="insert_sg_news" parameterType="java.util.HashMap">
   		insert into sg_news (effectrange, newstype, title, newstime, contents, comment, trackingtype, signaltype, signalmessage, regdate)
   		values('5', #{newsType}, #{title}, concat(#{newsYear}, #{newsMonth}, #{newsDay}), #{contents}, #{comment}, #{trackingType}, #{signalType}, #{signalMessage}, 
   			   date_format(NOW(), '%Y%m%d'))
   		<selectKey resultType="Integer"	keyProperty="newsNo" order="AFTER">
            select last_insert_id()
        </selectKey>
   	</insert>
   	
   	<!-- 뉴스수정 -->
   	<update id="update_sg_news"	parameterType="java.util.HashMap">
   		update sg_news set newstype = #{newsType},
   						   title = #{title},
   						   newstime = concat(#{newsYear}, #{newsMonth}, #{newsDay}),
   						   contents = #{contents},
   						   comment = #{comment},
   						   trackingtype = #{trackingType},
   						   signaltype = #{signalType},
   						   signalmessage = #{signalMessage},
   						   moddate = date_format(NOW(), '%Y%m%d')
   		where newsno = #{newsNo}
   	</update>
   	
   	<!-- 뉴스 카테고리 등록 -->
   	<insert id="insert_sg_news_category" parameterType="java.util.HashMap">
   		insert into sg_news_category (newsno, gbtype, category, categoryid)
   		values(#{newsNo}, '1', '5', #{stockNo}); 
   	</insert>
   	
   	<!-- 뉴스 카테고리 수정 -->
   	<update id="update_sg_news_category" parameterType="java.util.HashMap">
   		update sg_news_category set categoryid = #{stockNo}
   		where newsno = #{newsNo}
   	</update>
</mapper>
